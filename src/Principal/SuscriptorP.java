/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Principal;

import Clases.Conexion;
import Clases.Suscriptor;
import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.AbstractButton;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Reymundo Tenorio
 */
public class SuscriptorP extends javax.swing.JFrame {

    /**
     * Creates new form Estudiante
     */
    public SuscriptorP() {
        
         try{
        this.setIconImage (new ImageIcon(getClass().getResource("/Imagenes/Suscriptores.png")).getImage());
        }catch(NullPointerException ex){}
        
        initComponents();
        jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        PopupMenu = new javax.swing.JPopupMenu();
        MnItemFoto = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        MnItemModificar = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        MnItemActDes = new javax.swing.JMenuItem();
        TabbedPane = new org.edisoncor.gui.tabbedPane.TabbedPaneHeader();
        PanelNuevo = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnnew = new javax.swing.JButton();
        btnsave = new javax.swing.JButton();
        btncancel = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDireccion = new javax.swing.JTextArea();
        jPanel9 = new javax.swing.JPanel();
        btnFoto = new javax.swing.JButton();
        jLblFoto = new javax.swing.JLabel();
        PanelVer = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmbbusc = new javax.swing.JComboBox();
        btnbuscar = new javax.swing.JButton();
        txtbusc = new javax.swing.JTextField();
        btnMostrar = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        btnActivar = new javax.swing.JButton();
        btnDesactivar = new javax.swing.JButton();
        btnmodify = new javax.swing.JButton();
        btncancel3 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jLblFoto1 = new javax.swing.JLabel();

        MnItemFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FotoIcon.png"))); // NOI18N
        MnItemFoto.setMnemonic('m');
        MnItemFoto.setText("Ver Fotografía");
        MnItemFoto.setToolTipText("Ver Fotografía del Suscriptor");
        MnItemFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnItemFotoActionPerformed(evt);
            }
        });
        PopupMenu.add(MnItemFoto);
        PopupMenu.add(jSeparator3);

        MnItemModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ModificarIcon.png"))); // NOI18N
        MnItemModificar.setMnemonic('m');
        MnItemModificar.setText("Modificar");
        MnItemModificar.setToolTipText("Modificar Suscriptor");
        MnItemModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnItemModificarActionPerformed(evt);
            }
        });
        PopupMenu.add(MnItemModificar);
        PopupMenu.add(jSeparator1);

        MnItemActDes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ActivarIcon.png"))); // NOI18N
        MnItemActDes.setMnemonic('a');
        MnItemActDes.setText("Activar");
        MnItemActDes.setToolTipText("Activar Suscriptor");
        MnItemActDes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnItemActDesActionPerformed(evt);
            }
        });
        PopupMenu.add(MnItemActDes);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Suscriptor");
        setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        TabbedPane.setBackground(new java.awt.Color(0, 204, 204));
        TabbedPane.setColorDeBorde(new java.awt.Color(0, 204, 204));
        TabbedPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TabbedPaneMousePressed(evt);
            }
        });
        TabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                TabbedPaneStateChanged(evt);
            }
        });

        PanelNuevo.setBackground(new java.awt.Color(0, 153, 204));
        PanelNuevo.setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(0, 102, 153));

        btnnew.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnnew.setForeground(new java.awt.Color(255, 255, 255));
        btnnew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Nuevo_1.png"))); // NOI18N
        btnnew.setMnemonic('n');
        btnnew.setText("Nuevo");
        btnnew.setToolTipText("Ingresar Nuevo Estudiante");
        btnnew.setContentAreaFilled(false);
        btnnew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnnew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnewActionPerformed(evt);
            }
        });
        jPanel1.add(btnnew);

        btnsave.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnsave.setForeground(new java.awt.Color(255, 255, 255));
        btnsave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Agregar.png"))); // NOI18N
        btnsave.setMnemonic('g');
        btnsave.setText("Guardar");
        btnsave.setToolTipText("Guardar Estudiante");
        btnsave.setContentAreaFilled(false);
        btnsave.setEnabled(false);
        btnsave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnsave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });
        jPanel1.add(btnsave);

        btncancel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btncancel.setForeground(new java.awt.Color(255, 255, 255));
        btncancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Cancelar.png"))); // NOI18N
        btncancel.setMnemonic('c');
        btncancel.setText("Cancelar");
        btncancel.setToolTipText("Cancelar / Salir");
        btncancel.setContentAreaFilled(false);
        btncancel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btncancel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btncancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelActionPerformed(evt);
            }
        });
        jPanel1.add(btncancel);

        PanelNuevo.add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jPanel6.setBackground(new java.awt.Color(0, 153, 204));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Información Nuevo Suscriptor", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(204, 204, 204))); // NOI18N
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBackground(new java.awt.Color(235, 235, 150));
        jPanel3.setOpaque(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombres");

        txtNombre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtNombre.setToolTipText("Ingrese Nombres del Estudiante");
        txtNombre.setEnabled(false);
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Apellidos");

        txtApellido.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtApellido.setToolTipText("Ingrese Apellidos del Estudiante");
        txtApellido.setEnabled(false);
        txtApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Dirección");

        txtDireccion.setColumns(20);
        txtDireccion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtDireccion.setRows(5);
        txtDireccion.setEnabled(false);
        jScrollPane1.setViewportView(txtDireccion);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombre))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                            .addComponent(txtApellido))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(74, 74, 74))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 309;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(71, 106, 0, 0);
        jPanel6.add(jPanel3, gridBagConstraints);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Fotografía Suscriptor", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(204, 204, 204))); // NOI18N
        jPanel9.setOpaque(false);

        btnFoto.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnFoto.setForeground(new java.awt.Color(255, 255, 255));
        btnFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Foto.png"))); // NOI18N
        btnFoto.setMnemonic('a');
        btnFoto.setText("Agregar Foto");
        btnFoto.setToolTipText("Seleccionar Fotografía del Estudiante");
        btnFoto.setContentAreaFilled(false);
        btnFoto.setEnabled(false);
        btnFoto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnFoto.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFotoActionPerformed(evt);
            }
        });

        jLblFoto.setForeground(new java.awt.Color(235, 235, 150));
        jLblFoto.setEnabled(false);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnFoto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jLblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnFoto)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipady = -2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(42, 97, 6, 6);
        jPanel6.add(jPanel9, gridBagConstraints);

        PanelNuevo.add(jPanel6, java.awt.BorderLayout.CENTER);

        TabbedPane.addTab("Nuevo Suscriptor", PanelNuevo);

        PanelVer.setBackground(new java.awt.Color(235, 235, 150));
        PanelVer.setLayout(new javax.swing.BoxLayout(PanelVer, javax.swing.BoxLayout.LINE_AXIS));

        jPanel7.setBackground(new java.awt.Color(0, 153, 204));
        jPanel7.setLayout(new java.awt.BorderLayout());

        jPanel4.setBackground(new java.awt.Color(235, 235, 150));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscar Suscriptor", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(204, 204, 204))); // NOI18N
        jPanel4.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Buscar Por: ");

        cmbbusc.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cmbbusc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No.", "Nombres de Suscriptor", "Apellidos del Suscriptor" }));
        cmbbusc.setToolTipText("Buscar Por:");

        btnbuscar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnbuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnbuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/BuscarIcon.png"))); // NOI18N
        btnbuscar.setMnemonic('b');
        btnbuscar.setText("Buscar");
        btnbuscar.setToolTipText("Buscar Estudiante");
        btnbuscar.setContentAreaFilled(false);
        btnbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscarActionPerformed(evt);
            }
        });

        txtbusc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtbuscKeyReleased(evt);
            }
        });
        /*txtbusc = new AutoComplete.AutoCompletar();

        ((AutoCompletar)txtbusc).setDesplegable(new DesplegableJPopUPMenu(txtbusc));

        ModeloAutoCompletar modelo1 = new ModeloVendNames();

        ((AutoCompletar)txtbusc).setModelo(modelo1);
        ((AutoCompletar)txtbusc).getDesplegable().setForeground(new Color(102,153,255));

        ((AutoCompletar)txtbusc).addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtbuscTyped(evt);
            }
        });

        ((AutoCompletar)txtbusc).setToolTipText("Ingresar Dato a Buscar");*/

        btnMostrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnMostrar.setForeground(new java.awt.Color(255, 255, 255));
        btnMostrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/TodosIcon.png"))); // NOI18N
        btnMostrar.setMnemonic('b');
        btnMostrar.setText("Ver Todos");
        btnMostrar.setToolTipText("Mostrar Todos Los Estudiantes");
        btnMostrar.setContentAreaFilled(false);
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cmbbusc, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtbusc, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMostrar)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbbusc, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnbuscar)
                    .addComponent(txtbusc, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMostrar))
                .addContainerGap())
        );

        jPanel7.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setToolTipText("Lista de Estudiantes");
        jTable1.setComponentPopupMenu(PopupMenu);
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTable1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTable1FocusLost(evt);
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane5.setViewportView(jTable1);

        jPanel7.add(jScrollPane5, java.awt.BorderLayout.CENTER);

        jPanel5.setBackground(new java.awt.Color(0, 102, 153));

        btnActivar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnActivar.setForeground(new java.awt.Color(255, 255, 255));
        btnActivar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Activar.png"))); // NOI18N
        btnActivar.setMnemonic('A');
        btnActivar.setText("Activar");
        btnActivar.setToolTipText("Activar Estudiante(s) Seleccionado(s)");
        btnActivar.setContentAreaFilled(false);
        btnActivar.setEnabled(false);
        btnActivar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnActivar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnActivar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnActivarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnActivarFocusLost(evt);
            }
        });
        btnActivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActivarActionPerformed(evt);
            }
        });
        jPanel5.add(btnActivar);

        btnDesactivar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDesactivar.setForeground(new java.awt.Color(255, 255, 255));
        btnDesactivar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Desactivar.png"))); // NOI18N
        btnDesactivar.setMnemonic('d');
        btnDesactivar.setText("Desactivar");
        btnDesactivar.setToolTipText("Desactivar Estudiante(s) Seleccionado(s)");
        btnDesactivar.setContentAreaFilled(false);
        btnDesactivar.setEnabled(false);
        btnDesactivar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDesactivar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDesactivar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnDesactivarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnDesactivarFocusLost(evt);
            }
        });
        btnDesactivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesactivarActionPerformed(evt);
            }
        });
        jPanel5.add(btnDesactivar);

        btnmodify.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnmodify.setForeground(new java.awt.Color(255, 255, 255));
        btnmodify.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Modificar.png"))); // NOI18N
        btnmodify.setMnemonic('o');
        btnmodify.setText("Modificar");
        btnmodify.setToolTipText("Modificar Estudiante Seleccionado");
        btnmodify.setContentAreaFilled(false);
        btnmodify.setEnabled(false);
        btnmodify.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnmodify.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnmodify.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnmodifyFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnmodifyFocusLost(evt);
            }
        });
        btnmodify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmodifyActionPerformed(evt);
            }
        });
        jPanel5.add(btnmodify);

        btncancel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btncancel3.setForeground(new java.awt.Color(255, 255, 255));
        btncancel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Cancelar.png"))); // NOI18N
        btncancel3.setMnemonic('c');
        btncancel3.setText("Cancelar");
        btncancel3.setToolTipText("Cancelar / Salir");
        btncancel3.setContentAreaFilled(false);
        btncancel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btncancel3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btncancel3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancel3ActionPerformed(evt);
            }
        });
        jPanel5.add(btncancel3);

        jPanel7.add(jPanel5, java.awt.BorderLayout.SOUTH);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Fotografía Suscriptor", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(204, 204, 204))); // NOI18N
        jPanel11.setOpaque(false);

        jLblFoto1.setForeground(new java.awt.Color(235, 235, 150));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLblFoto1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLblFoto1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel7.add(jPanel11, java.awt.BorderLayout.EAST);

        PanelVer.add(jPanel7);

        TabbedPane.addTab("Ver Suscriptores", PanelVer);

        getContentPane().add(TabbedPane, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(1209, 722));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    private int ID_Suscriptor;
    private boolean Modify;
    private String File;
    private MenuPrincipal MP;
    private String Foto;

    public void Foto (String Foto) {
        this.Foto = Foto;
    }
      
   
    public void setFoto(){
        
           File = this.Foto;
           jLblFoto.setIcon(new ImageIcon(File));
            //Convirtiendo Imagen a ImageIcon
            ImageIcon icon = new ImageIcon(File);
            //Se Extrae La Imagen de Icono
            Image img = icon.getImage();
            //Se Cambia y Ajusta El Tamano de La Imagen
            Image newimg = img.getScaledInstance(342,350,java.awt.Image.SCALE_SMOOTH);
            //Se Genera La Nueva Imagen Con El ImageIcon
            ImageIcon newIcon = new ImageIcon(newimg);
            //Se Coloca el Nuevo Icono Modificado
            jLblFoto.setIcon(newIcon);
            //Se Cambia el Tamano de la Etiqueta
            jLblFoto.setSize(256,256);
    }
    
    public void setMP(MenuPrincipal MP) {
        this.MP = MP;
    }
    
    
    public static ResultSet resultado;

    
    public void Guardar (){
        
        
        
        String Nombres, Apellidos, Direccion, Foto;
      
        
        Nombres = txtNombre.getText().trim();
        Apellidos = txtApellido.getText().trim();
        Direccion = txtDireccion.getText().trim();
        Foto = File;
       
          if("".equals(Nombres))  {
            JOptionPane.showMessageDialog(this,"Ingrese Los Nombres del Suscriptor","Ingrese",JOptionPane.ERROR_MESSAGE);
            return;
           }
        
        if("".equals(Apellidos))  {
            JOptionPane.showMessageDialog(this,"Ingrese Los Apellidos del Suscriptor","Ingrese",JOptionPane.ERROR_MESSAGE);
            return;
           }
         

             if("".equals(Direccion)){

            JOptionPane.showMessageDialog(this,"Ingrese La Dirección del Suscriptor","Ingrese",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
   

       
         
        if("".equals(Foto))  {
            JOptionPane.showMessageDialog(this,"Seleccione La Fotografía del Suscriptor","Ingrese",JOptionPane.ERROR_MESSAGE);
            return;
           }
       
  

            if(Modify==true){

                int ID = ID_Suscriptor;
           
                Suscriptor.Actualizar_Suscriptor(ID, Nombres, Apellidos, Direccion, Foto);
                
                ActualizarTabla();
                CleanAll();
                DisableAll();
                Modify = false;
            }
            else{

              
               Suscriptor.Agregar_Suscriptor(Nombres, Apellidos, Direccion, Foto);
              
                ActualizarTabla();
                CleanAll();
                DisableAll();

            }
    }
    
    public void CleanAll(){
        txtApellido.setText("");
        txtDireccion.setText("");
        txtNombre.setText("");
        File = "";
        jLblFoto.setIcon(null);
    }
    
    public void EnableAll(){
        txtApellido.setEnabled(true);
        txtDireccion.setEnabled(true);
        txtNombre.setEnabled(true);
        jLblFoto.setEnabled(true);
        btnFoto.setEnabled(true);
        btnsave.setEnabled(true);
        
    }
    
      public void DisableAll(){
        txtApellido.setEnabled(false);
        txtDireccion.setEnabled(false);
        txtNombre.setEnabled(false);
        jLblFoto.setEnabled(false);
        btnFoto.setEnabled(false);
        btnsave.setEnabled(false);
        
    }
    
    
      
    public void AddPic(){
        
          JFileChooser dlg = new JFileChooser();
          FileNameExtensionFilter filtroImagen=new FileNameExtensionFilter("JPG, PNG, GIF, BMP, & TIFF","jpg","png","gif","bmp", "tif");
         
          dlg.setFileFilter(filtroImagen);
        
        int option = dlg.showOpenDialog(this);

        if(option==JFileChooser.APPROVE_OPTION) {
            //Obtiene La Ruta del Archivo Seleccionado
            File = dlg.getSelectedFile().getPath();
        
            jLblFoto.setIcon(new ImageIcon(File));
            //Convirtiendo Imagen a ImageIcon
            ImageIcon icon = new ImageIcon(File);
            //Se Extrae La Imagen de Icono
            Image img = icon.getImage();
            //Se Cambia y Ajusta El Tamano de La Imagen
            Image newimg = img.getScaledInstance(342,350,java.awt.Image.SCALE_SMOOTH);
            //Se Genera La Nueva Imagen Con El ImageIcon
            ImageIcon newIcon = new ImageIcon(newimg);
            //Se Coloca el Nuevo Icono Modificado
            jLblFoto.setIcon(newIcon);
            //Se Cambia el Tamano de la Etiqueta
            jLblFoto.setSize(256,256);
        }
    }
    
    
   
    
   public void ActualizarTabla(){
        
        
       model.setRowCount(0);
       jTable1.setModel(model);
       
      
        try{
            
        
        resultado = Conexion.consulta("Select * from suscriptorv");

        
       
     
       while (resultado.next())
       {     
              Object [] Datos = new Object [6]; 

              Datos [0]= false;
              Datos [1]= String.valueOf(resultado.getInt(1));    
              Datos [2]= resultado.getString(2);
              Datos [3]= resultado.getString(3);
              Datos [4]= resultado.getString(4);
              Datos [5]= resultado.getString(5);
              
              model.addRow(Datos);  
   
    }
       
       jTable1.setModel(model);
    
   
//        jTable1.getColumnModel().getColumn( 10 ).setCellEditor( new Celda_CheckBox() );
//        //para pintar la columna con el CheckBox en la tabla, en este caso, la primera columna
//        jTable1.getColumnModel().getColumn( 10 ).setCellRenderer(new Render_CheckBox());      

        
    }   catch (SQLException ex) {
      JOptionPane.showMessageDialog(null,ex.getMessage()); 
    }
        
          
    }
   
   

   
    
    public void Buscar(){
     
        int index = cmbbusc.getSelectedIndex()+1;

        switch(index){

            case 1:

            try{
                model.setRowCount(0);
                String Buscar = txtbusc.getText();
                resultado = Conexion.consulta("Select * from suscriptorv where ID_Suscriptor = '"+Buscar+"'");

                while (resultado.next())
                {
              
              Object [] Datos = new Object [6]; 

              Datos [0]= false;
              Datos [1]= String.valueOf(resultado.getInt(1));    
              Datos [2]= resultado.getString(2);
              Datos [3]= resultado.getString(3);
              Datos [4]= resultado.getString(4);
              Datos [5]= resultado.getString(5);   
           
              model.addRow(Datos);  
   
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"No. de Suscriptor No Encontrado");
            }

            break;

            case 2:
                
                
            try{
              
                model.setRowCount(0);
                String Buscar = txtbusc.getText();
                resultado = Conexion.consulta("Select * from suscriptorv where Nombres = '"+Buscar+"'");

                while (resultado.next())
                {
              
              Object [] Datos = new Object [6]; 

              Datos [0]= false;
              Datos [1]= String.valueOf(resultado.getInt(1));    
              Datos [2]= resultado.getString(2);
              Datos [3]= resultado.getString(3);
              Datos [4]= resultado.getString(4);
              Datos [5]= resultado.getString(5);   
           
              model.addRow(Datos);  
   
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Nombres del Suscriptor No Encontrado");
            }

            break;
                
            case 3:
                
            try{
                 model.setRowCount(0);
                String Buscar = txtbusc.getText();
                resultado = Conexion.consulta("Select * from suscriptorv where Apellidos = '"+Buscar+"'");

                while (resultado.next())
                {
              
              Object [] Datos = new Object [6]; 

              Datos [0]= false;
              Datos [1]= String.valueOf(resultado.getInt(1));    
              Datos [2]= resultado.getString(2);
              Datos [3]= resultado.getString(3);
              Datos [4]= resultado.getString(4);
              Datos [5]= resultado.getString(5);   
           
              model.addRow(Datos);  
   
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Apellidos del Suscriptor No Encontrado");
            }
          
            break;
           
            case 4:
                
                  try{
                   
                 model.setRowCount(0);
                String Buscar = txtbusc.getText();
                resultado = Conexion.consulta("Select * from suscriptorv where Estado_Suscriptor  = '"+Buscar+"'");

                while (resultado.next())
                {
              
              Object [] Datos = new Object [6]; 

              Datos [0]= false;
              Datos [1]= String.valueOf(resultado.getInt(1));    
              Datos [2]= resultado.getString(2);
              Datos [3]= resultado.getString(3);
              Datos [4]= resultado.getString(4);
              Datos [5]= resultado.getString(5);   
           
              model.addRow(Datos);   
   
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Estado de Suscriptor No Encontrado");
            }
            

            break;
            
       
            default:

            break;

          
        
        }
        
        ReiniciarTabla();
        jTable1.setModel(model);
        
        
    }
    
    
    private void btnbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscarActionPerformed

        Buscar();
        
        // TODO add your handling code here:
    }//GEN-LAST:event_btnbuscarActionPerformed

    private void txtbuscKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbuscKeyReleased
        int index = cmbbusc.getSelectedIndex()+1;

        switch(index){

          
            case 1:

            try{
                model.setRowCount(0);
                String Buscar = txtbusc.getText();
                resultado = Conexion.consulta("Select * from suscriptorv where ID_Suscriptor like '%"+Buscar+"%'");

                while (resultado.next())
                {
              
              Object [] Datos = new Object [6]; 

              Datos [0]= false;
              Datos [1]= String.valueOf(resultado.getInt(1));    
              Datos [2]= resultado.getString(2);
              Datos [3]= resultado.getString(3);
              Datos [4]= resultado.getString(4);
              Datos [5]= resultado.getString(5);   
           
              model.addRow(Datos);  
   
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"No. de Suscriptor No Encontrado");
            }

            break;

            case 2:
                
                
            try{
              
                model.setRowCount(0);
                String Buscar = txtbusc.getText();
                resultado = Conexion.consulta("Select * from suscriptorv where Nombres like '%"+Buscar+"%'");

                while (resultado.next())
                {
              
              Object [] Datos = new Object [6]; 

              Datos [0]= false;
              Datos [1]= String.valueOf(resultado.getInt(1));    
              Datos [2]= resultado.getString(2);
              Datos [3]= resultado.getString(3);
              Datos [4]= resultado.getString(4);
              Datos [5]= resultado.getString(5);   
           
              model.addRow(Datos);  
   
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Nombres del Suscriptor No Encontrado");
            }

            break;
                
            case 3:
                
            try{
                 model.setRowCount(0);
                String Buscar = txtbusc.getText();
                resultado = Conexion.consulta("Select * from suscriptorv where Apellidos like '%"+Buscar+"%'");

                while (resultado.next())
                {
              
              Object [] Datos = new Object [6]; 

              Datos [0]= false;
              Datos [1]= String.valueOf(resultado.getInt(1));    
              Datos [2]= resultado.getString(2);
              Datos [3]= resultado.getString(3);
              Datos [4]= resultado.getString(4);
              Datos [5]= resultado.getString(5);   
           
              model.addRow(Datos);  
   
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Apellidos del Suscriptor No Encontrado");
            }
          
            break;
           
            case 4:
                
                  try{
                   
                 model.setRowCount(0);
                String Buscar = txtbusc.getText();
                resultado = Conexion.consulta("Select * from suscriptorv where Estado_Suscriptor  like '%"+Buscar+"%'");

                while (resultado.next())
                {
              
              Object [] Datos = new Object [6]; 

              Datos [0]= false;
              Datos [1]= String.valueOf(resultado.getInt(1));    
              Datos [2]= resultado.getString(2);
              Datos [3]= resultado.getString(3);
              Datos [4]= resultado.getString(4);
              Datos [5]= resultado.getString(5);   
           
              model.addRow(Datos);   
   
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Estado de Suscriptor No Encontrado");
            }
            

            break;
            
       
            default:

            break;

          
        
        }
        ReiniciarTabla();
        jTable1.setModel(model);
        
                // TODO add your handling code here:
    }//GEN-LAST:event_txtbuscKeyReleased

    public void VerFotoSuscriptor(){
       
   int fila = jTable1.getSelectedRow();
      
   if (fila > -1){
     
          int ID = 0;
          
         ID = Integer.parseInt(this.jTable1.getModel().getValueAt(fila, 1).toString());
         
         String Fotografia;
                 
         try {
                 
          
   resultado = Conexion.consulta("Select Imagen_Suscriptor from suscriptor where ID_Suscriptor = "+ID);
          
     if (resultado.next()){
            Fotografia = resultado.getString(1);
                            
            File = Fotografia;
            jLblFoto1.setIcon(new ImageIcon(File));
            //Convirtiendo Imagen a ImageIcon
            ImageIcon icon = new ImageIcon(File);
            //Se Extrae La Imagen de Icono
            Image img = icon.getImage();
            //Se Cambia y Ajusta El Tamano de La Imagen
            Image newimg = img.getScaledInstance(289,292,java.awt.Image.SCALE_SMOOTH);
            //Se Genera La Nueva Imagen Con El ImageIcon
            ImageIcon newIcon = new ImageIcon(newimg);
            //Se Coloca el Nuevo Icono Modificado
            jLblFoto1.setIcon(newIcon);
            
           
     }                          
     
                              
                        
                 }
                 catch (SQLException e)
                 {
                         JOptionPane.showMessageDialog(null, "El Suscriptor No Posee Fotografía","Error",JOptionPane.ERROR_MESSAGE);
                        
                 }
      
        }
    }
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
      ActivarBotones();
      
 if(evt.getClickCount()==2 && evt.getButton()==java.awt.event.MouseEvent.BUTTON1){           
        
    
    VerFotoSuscriptor();
    
        }
          
     
int fila = jTable1.getSelectedRow();

if(fila != -1){

String Estado = ((String)this.jTable1.getModel().getValueAt(fila, 5));
 
 if("Inactivo".equalsIgnoreCase(Estado)){
      
MnItemActDes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ActivarIcon.png"))); // NOI18N

MnItemActDes.setMnemonic('a');

MnItemActDes.setText("Activar");

MnItemActDes.setToolTipText("Activar Suscriptor");

    }
 if("Activo".equalsIgnoreCase(Estado)){
    
MnItemActDes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/DesactivarIcon.png"))); // NOI18N

MnItemActDes.setMnemonic('a');

MnItemActDes.setText("Desactivar");

MnItemActDes.setToolTipText("Desactivar Suscriptor");
}

}

        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusLost
        
  ActivarBotones(); // TODO add your handling code here:
    }//GEN-LAST:event_jTable1FocusLost

    public void ActivarDesactivarSuscriptor(){
        int fila = jTable1.getSelectedRow();

        int ID;
        String Nombre;
        int v=JOptionPane.NO_OPTION;
        String Estado;
        String Apellido;

        if (fila > -1){
            
            

            ID= Integer.parseInt(this.jTable1.getModel().getValueAt(fila, 1).toString());
            Nombre=((String)this.jTable1.getModel().getValueAt(fila, 2));
            Apellido = ((String)this.jTable1.getModel().getValueAt(fila, 3));
            Estado = ((String)this.jTable1.getModel().getValueAt(fila, 5));

           
            
            if("Activo".equalsIgnoreCase(Estado)){
                
                v= JOptionPane.showConfirmDialog(this, "Está Seguro Que Desea Desactivar al Suscriptor "+Nombre.trim()+" "+Apellido.trim()+"?", "Confirmación", JOptionPane.YES_NO_OPTION);
            }
            if("Inactivo".equalsIgnoreCase(Estado)){
             
                v= JOptionPane.showConfirmDialog(this, "Está Seguro Que Desea Activar al Suscriptor "+Nombre.trim()+" "+Apellido.trim()+"?", "Confirmación", JOptionPane.YES_NO_OPTION);
            }

            if(v==JOptionPane.YES_OPTION){

                
                Suscriptor.Activar_Desactivar_Suscriptor(ID);
               
                ActualizarTabla();
            }
        }

        else{

            JOptionPane.showMessageDialog(this, "Seleccione Un Suscriptor a Activar/Desactivar", "Error", JOptionPane.ERROR_MESSAGE);

        }

    }
    
    
     public void ActivarSuscriptor(){
     

        int ID;
        int v;
        boolean Flag;
      

           
          
//            if("Activo".equalsIgnoreCase(Estado)){
//                
//                v= JOptionPane.showConfirmDialog(this, "Está Seguro Que Desea Desactivar Estudiante(s) ?", "Confirmación", JOptionPane.YES_NO_OPTION);
//            }
            
             
             v= JOptionPane.showConfirmDialog(this, "Está Seguro Que Desea Activar Suscriptor(es) ?", "Confirmación", JOptionPane.YES_NO_OPTION);
            
            if(v==JOptionPane.YES_OPTION){

                 
        for(int i=0; i<jTable1.getRowCount();i++){
            
            
            Flag = (boolean) this.jTable1.getModel().getValueAt(i, 0);
      
         if(Flag == true){
               ID= Integer.parseInt(this.jTable1.getModel().getValueAt(i, 1).toString());
      
               Suscriptor.Activar_Suscriptor(ID);
         }
               
            }
         JOptionPane.showMessageDialog(this, "Suscriptor(es) Activado(s) Con Éxito", "Activado(s) Con Éxito", JOptionPane.INFORMATION_MESSAGE);

        }

//        if(jTable1.getSelectedRow() == -1){
//
//            JOptionPane.showMessageDialog(this, "Seleccione Estudiante(s) a Activar", "Error", JOptionPane.ERROR_MESSAGE);
//
//        }
       
         ActualizarTabla();
    }
    
     
      public void DesactivarSuscriptor(){
     

        int ID;
        int v;
        boolean Flag;
      

           
          
                    
   v= JOptionPane.showConfirmDialog(this, "Está Seguro Que Desea Desactivar Suscriptor(es) ?", "Confirmación", JOptionPane.YES_NO_OPTION);
           
            
             
          
            if(v==JOptionPane.YES_OPTION){

                 
        for(int i=0; i<jTable1.getRowCount();i++){
            
            
            Flag = (boolean) this.jTable1.getModel().getValueAt(i, 0);
      
         if(Flag == true){
               ID= Integer.parseInt(this.jTable1.getModel().getValueAt(i, 1).toString());
      
                Suscriptor.Desactivar_Suscriptor(ID);
         }
               
            }
        
        JOptionPane.showMessageDialog(this, "Suscriptor(es) Desactivado(s) Con Éxito", "Desactivado(s) Con Éxito", JOptionPane.INFORMATION_MESSAGE);

        }

//        if(jTable1.getSelectedRow() == -1){
//
//            JOptionPane.showMessageDialog(this, "Seleccione Estudiante(s) a Desactivar", "Error", JOptionPane.ERROR_MESSAGE);
//
//        }
        
         ActualizarTabla();
    }
      
      
    private void btnActivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActivarActionPerformed

       
         ActivarBotones();
         
         ActivarSuscriptor();
         ReiniciarTabla();
       
        
        // TODO add your handling code here:
    }//GEN-LAST:event_btnActivarActionPerformed

    private void btnActivarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnActivarFocusGained
        
        ActivarBotones();
        
// TODO add your handling code here:
    }//GEN-LAST:event_btnActivarFocusGained

    public void Modificar(){
        
      ActivarBotones();
      
      
      
        int fila = jTable1.getSelectedRow();

        int ID;
        String Nombres, Apellidos, Direccion;  
        
        if (fila > -1){

            ID= Integer.parseInt(this.jTable1.getModel().getValueAt(fila, 1).toString()); 
            Nombres=((String)this.jTable1.getModel().getValueAt(fila, 2));
            Apellidos=((String)this.jTable1.getModel().getValueAt(fila, 3));
            Direccion =((String)this.jTable1.getModel().getValueAt(fila, 4));
            
         

            CleanAll();
            EnableAll();

        
        ID_Suscriptor = ID;
        txtNombre.setText(Nombres);
        txtApellido.setText(Apellidos);
        txtDireccion.setText(Direccion);
        String Fotografia;

        
       
                 
         try {
                 
             
               resultado = Conexion.consulta("Select Imagen_Suscriptor from suscriptor where ID_Suscriptor = "+ID);
          
     if (resultado.next()){
            Fotografia = resultado.getString(1);
                            
            File = Fotografia;
            jLblFoto.setIcon(new ImageIcon(File));
            //Convirtiendo Imagen a ImageIcon
            ImageIcon icon = new ImageIcon(File);
            //Se Extrae La Imagen de Icono
            Image img = icon.getImage();
            //Se Cambia y Ajusta El Tamano de La Imagen
            Image newimg = img.getScaledInstance(346,350,java.awt.Image.SCALE_SMOOTH);
            //Se Genera La Nueva Imagen Con El ImageIcon
            ImageIcon newIcon = new ImageIcon(newimg);
            //Se Coloca el Nuevo Icono Modificado
            jLblFoto.setIcon(newIcon);
            
           
     }                
                        
                 }
                 catch (SQLException e)
                 {
                         JOptionPane.showMessageDialog(null, "Error Al Mostrar Imagen","Error",JOptionPane.ERROR_MESSAGE);
                        
                 }

            TabbedPane.setSelectedComponent(PanelNuevo);
            Modify=true;

        }

        else{

            JOptionPane.showMessageDialog(this, "Seleccione Un Suscriptor a Modificar", "Error", JOptionPane.ERROR_MESSAGE);

        }

    }
    
    private void btnmodifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmodifyActionPerformed
Modificar();
    }//GEN-LAST:event_btnmodifyActionPerformed

    private void btnmodifyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnmodifyFocusGained
       ActivarBotones();
       
// TODO add your handling code here:
    }//GEN-LAST:event_btnmodifyFocusGained

    private void btncancel3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancel3ActionPerformed
        MP.setVisible(true);  
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btncancel3ActionPerformed

    private void TabbedPaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabbedPaneMousePressed
      
        // TODO add your handling code here:
    }//GEN-LAST:event_TabbedPaneMousePressed

    private void TabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_TabbedPaneStateChanged
       
         // TODO add your handling code here:
    }//GEN-LAST:event_TabbedPaneStateChanged

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    
     ReiniciarTabla();
     
        
// TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
    MP.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void btnFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFotoActionPerformed
              ModoImagen Pic = new ModoImagen(this, false);
              this.setVisible(false);
              Pic.setSuscriptor(this);
              Pic.setVisible(true);
              Pic.toFront();
        
     //   AddPic();        // TODO add your handling code here:
    }//GEN-LAST:event_btnFotoActionPerformed

    
    public void ActivarBotones(){
          String Estado;

   
      boolean Checkbox = false;
      
      for(int j=0; j<jTable1.getRowCount(); j++){
        
          Checkbox = (boolean) jTable1.getValueAt(j, 0);
          
          if(Checkbox == true){      
            
             btnActivar.setEnabled(true);
             btnDesactivar.setEnabled(true);
             
              break;
          }
       }
      
      
       
      int Fila = jTable1.getSelectedRow();
        
      if(Checkbox == false){
      
           btnActivar.setEnabled(false);
           btnDesactivar.setEnabled(false);

        if (Fila > -1){

            btnmodify.setEnabled(true);
            

            Estado = ((String)this.jTable1.getModel().getValueAt(Fila, 5));
     

//            if("Activo".equalsIgnoreCase(Estado)){
//                btnActivar.setText("Desactivar");
//                btnActivar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Desactivar.png")));
//            }
//            if("Inactivo".equalsIgnoreCase(Estado)){
//                btnActivar.setText("Activar");
//                btnActivar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Activar.png")));
//            }
   
        }
        else{
            btnmodify.setEnabled(false);
    
        }  
      }

      
        if (Fila > -1){
              btnmodify.setEnabled(true);
        }
        else{
              btnmodify.setEnabled(false);
        }
    }
    
    private void btnActivarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnActivarFocusLost
 
 ActivarBotones();
// TODO add your handling code here:
    }//GEN-LAST:event_btnActivarFocusLost

    private void btnmodifyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnmodifyFocusLost
  ActivarBotones();    // TODO add your handling code here:
    }//GEN-LAST:event_btnmodifyFocusLost

    private void jTable1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusGained
  ActivarBotones();     // TODO add your handling code here:
    }//GEN-LAST:event_jTable1FocusGained

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
     ActivarBotones();// TODO add your handling code here:
    }//GEN-LAST:event_jTable1MousePressed

    private void btncancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelActionPerformed

        MP.setVisible(true);
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btncancelActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed

        Guardar();
        ReiniciarTabla();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnsaveActionPerformed

    private void btnnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnewActionPerformed

        EnableAll();
        CleanAll();
    }//GEN-LAST:event_btnnewActionPerformed

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
char a = evt.getKeyChar();

if(Character.isDigit(a)&&!Character.isISOControl(a)){
        Toolkit.getDefaultToolkit().beep();
        evt.consume();
    }
if(a == KeyEvent.VK_ENTER){
    txtApellido.requestFocus();
}
// TODO add your handling code here:
    }//GEN-LAST:event_txtNombreKeyTyped

    private void txtApellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoKeyTyped
char a = evt.getKeyChar();

if(Character.isDigit(a)&&!Character.isISOControl(a)){
        Toolkit.getDefaultToolkit().beep();
        evt.consume();
    } 

if(a == KeyEvent.VK_ENTER){
    txtDireccion.requestFocus();
}
// TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoKeyTyped

   
    
    private void MnItemModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnItemModificarActionPerformed
Modificar();      // TODO add your handling code here:
    }//GEN-LAST:event_MnItemModificarActionPerformed

    private void btnDesactivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesactivarActionPerformed
ActivarBotones();
DesactivarSuscriptor();
ReiniciarTabla();// TODO add your handling code here:
    }//GEN-LAST:event_btnDesactivarActionPerformed

    private void btnDesactivarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnDesactivarFocusGained
   ActivarBotones();     // TODO add your handling code here:
    }//GEN-LAST:event_btnDesactivarFocusGained

    private void btnDesactivarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnDesactivarFocusLost
    ActivarBotones();    // TODO add your handling code here:
    }//GEN-LAST:event_btnDesactivarFocusLost

   public void ReiniciarTabla(){
        
        Object [] Titulo = {"","No.", "Nombres", "Apellidos",
            "Dirección", "Estado"};
        
        model.setColumnIdentifiers(Titulo);
                
        
        this.jTable1.setModel(model);
        
        
        jTable1.setDefaultRenderer(Object.class, new FormatoTablaSuscriptor());
      
       
        CheckBoxHeader();  
        ActualizarTabla();     
    }
    
    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed

        ReiniciarTabla();
      
               // TODO add your handling code here:
    }//GEN-LAST:event_btnMostrarActionPerformed

    private void MnItemActDesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnItemActDesActionPerformed
ActivarDesactivarSuscriptor();        // TODO add your handling code here:
    }//GEN-LAST:event_MnItemActDesActionPerformed

    private void MnItemFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnItemFotoActionPerformed
VerFotoSuscriptor();        // TODO add your handling code here:
    }//GEN-LAST:event_MnItemFotoActionPerformed

    
    
    DefaultTableModel model = new DefaultTableModel() {

        
        
    Class[] types = new Class [] {
  
        java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, 
        java.lang.String.class, java.lang.String.class
    };
 

    @Override
    public Class getColumnClass(int columnIndex) {
        return types [columnIndex];
    }

  

    @Override
    public boolean isCellEditable(int row, int column) {
    
     if(column == 0){
            return true;
        }else{
            return false;
    }
    
    }
};
    
    
    
    
     public class FormatoTablaSuscriptor extends DefaultTableCellRenderer
{
 @Override
 public Component getTableCellRendererComponent
 (JTable table, Object value, boolean selected, boolean focused, int row, int column)
 {
   
     
  
  if(String.valueOf(table.getValueAt(row,5)).equalsIgnoreCase("Inactivo"))  {
      setForeground(Color.RED);   
  }
  else { 
      
          setForeground(Color.BLACK);
      
   }
  
   if((boolean) table.getValueAt(row,0) == true)  {
      
       setBackground(new Color(0,204,204));
  }
   else{
        setBackground(new Color(255,255,255));
      
   }
   
   
 super.getTableCellRendererComponent(table, value, selected, focused, row, column);
 return this;
 }
 }
     
       
   
     
 public class CheckBoxHeader extends JCheckBox  implements TableCellRenderer, MouseListener {  
 
  protected CheckBoxHeader rendererComponent;  
  protected int column;  


  protected boolean mousePressed = false;  
  
  public CheckBoxHeader(ItemListener itemListener) {  
    rendererComponent = this;  
    rendererComponent.addItemListener(itemListener);
    
  }  
  @Override
  public Component getTableCellRendererComponent(  
      JTable table, Object value,  
      boolean isSelected, boolean hasFocus, int row, int column) {  
    if (table != null) {  
      JTableHeader header = table.getTableHeader();  
      if (header != null) {  
        rendererComponent.setForeground(header.getForeground());  
        rendererComponent.setBackground(header.getBackground());  
        rendererComponent.setFont(header.getFont());  
        header.addMouseListener(rendererComponent);  
      }  
    }  
    setColumn(column);  
    rendererComponent.setText("Selecc. Todo");  
    setBorder(UIManager.getBorder("TableHeader.cellBorder"));  
    return rendererComponent;  
  }  
  protected void setColumn(int column) {  
    this.column = column;  
  }  
  public int getColumn() {  
    return column;  
  }  
  
  protected void handleClickEvent(MouseEvent e) {  
    if (mousePressed) {  
      mousePressed=false;  
      JTableHeader header = (JTableHeader)(e.getSource());  
      JTable tableView = header.getTable();  
      TableColumnModel columnModel = tableView.getColumnModel();  
      int viewColumn = columnModel.getColumnIndexAtX(e.getX());  
      int columna = tableView.convertColumnIndexToModel(viewColumn);  
   
      if (columna != -1 && viewColumn == this.column && e.getClickCount() == 1 
              && e.getButton() == MouseEvent.BUTTON1) {  
          doClick();
      }  
    }  
  } 
  
  @Override
  public void mouseClicked(MouseEvent e) {  
    handleClickEvent(e);  
    ((JTableHeader)e.getSource()).repaint();  
  }  
  @Override
  public void mousePressed(MouseEvent e) {  
    mousePressed = true;  
  }  
  @Override
  public void mouseReleased(MouseEvent e) {  
  }  
  @Override
  public void mouseEntered(MouseEvent e) {  
  }  
  @Override
  public void mouseExited(MouseEvent e) {  
  }  
    }  

 public void CheckBoxHeader()  
  {  
   
    TableColumn tc = jTable1.getColumnModel().getColumn(0);  //No Columna
    tc.setCellEditor(jTable1.getDefaultEditor(Boolean.class));  
    tc.setCellRenderer(jTable1.getDefaultRenderer(Boolean.class));  
    tc.setHeaderRenderer(new CheckBoxHeader(new MyItemListener()));  
    
   
  }  
  class MyItemListener implements ItemListener  
  {  
    @Override
    public void itemStateChanged(ItemEvent e) {  
      Object source = e.getSource();  
      if (source instanceof AbstractButton == false) return;  
      boolean checked = e.getStateChange() == ItemEvent.SELECTED;  
      for(int x = 0, y = jTable1.getRowCount(); x < y; x++)  
      {    
        jTable1.setValueAt(checked,x,0); 
        ActivarBotones();//No Columna
      }  
    }  
  }  
 
     /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
        }
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new SuscriptorP().setVisible(true);
        });
}  
     
   

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem MnItemActDes;
    private javax.swing.JMenuItem MnItemFoto;
    private javax.swing.JMenuItem MnItemModificar;
    private javax.swing.JPanel PanelNuevo;
    private javax.swing.JPanel PanelVer;
    private javax.swing.JPopupMenu PopupMenu;
    private org.edisoncor.gui.tabbedPane.TabbedPaneHeader TabbedPane;
    private javax.swing.JButton btnActivar;
    private javax.swing.JButton btnDesactivar;
    private javax.swing.JButton btnFoto;
    private javax.swing.JButton btnMostrar;
    private javax.swing.JButton btnbuscar;
    private javax.swing.JButton btncancel;
    private javax.swing.JButton btncancel3;
    private javax.swing.JButton btnmodify;
    private javax.swing.JButton btnnew;
    private javax.swing.JButton btnsave;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cmbbusc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLblFoto;
    private javax.swing.JLabel jLblFoto1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextArea txtDireccion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtbusc;
    // End of variables declaration//GEN-END:variables
}
